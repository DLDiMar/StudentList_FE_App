{"ast":null,"code":"var _jsxFileName = \"/home/dominicldimarco/hatchways_interview_11-2021/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UserDataCard from \"./components/studentCard/studentCard\";\nimport FilterContent from \"./components/filterContent/filterContent\";\nimport styles from \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [studentData, setStudentData] = useState([]);\n  const [filterContent, setFilterContent] = useState([]);\n  const [nameFilter, setNameFilter] = useState([]);\n  const [tagFilter, setTagFilter] = useState([]);\n  useEffect(() => {\n    fetchUrl(`https://www.hatchways.io/api/assessment/students`);\n  }, []);\n\n  const tagFilterFunction = str => {\n    if (str) {\n      let newTagFilter = [];\n      let newContentFilter = [];\n      studentData.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          newTagFilter.push(student);\n        }\n      });\n      filterContent.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          newContentFilter.push(student);\n        }\n      });\n      setFilterContent(newContentFilter);\n      setTagFilter(newTagFilter);\n    } else {\n      setFilterContent(nameFilter);\n      setTagFilter(studentData);\n    }\n  };\n\n  const nameFilterFunction = str => {\n    let newNameFilter = [];\n    let contentFilter = [];\n    studentData.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (fullName.includes(str)) {\n        newNameFilter.push(student);\n      }\n    });\n    tagFilter.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (fullName.includes(str)) {\n        contentFilter.push(student);\n      }\n    });\n    setFilterContent(contentFilter);\n    setNameFilter(newNameFilter);\n  };\n\n  const addTag = (str, index) => {\n    const tagForStudentData = [...studentData];\n    tagForStudentData[index].tags.push(str);\n    setStudentData(tagForStudentData);\n  };\n\n  async function fetchUrl(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    let newStudentData = [];\n    json.students.map(student => {\n      let addTags = student;\n      addTags.tags = [];\n      newStudentData.push(addTags);\n    });\n    setStudentData(newStudentData);\n    setFilterContent(newStudentData);\n    setNameFilter(newStudentData);\n    setTagFilter(newStudentData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentContainer,\n      children: [/*#__PURE__*/_jsxDEV(FilterContent, {\n        filterFunction: nameFilterFunction,\n        type: `name`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FilterContent, {\n        filterFunction: tagFilterFunction,\n        type: `tag`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), filterContent.map((student, index) => {\n        function findAverage(array) {\n          let sum = 0;\n\n          for (let i = 0; i < array.length; i++) {\n            sum += parseInt(array[i]);\n          }\n\n          let average = sum / array.length;\n          return average;\n        }\n\n        const averageGrade = findAverage(student.grades);\n        return /*#__PURE__*/_jsxDEV(UserDataCard, {\n          index: index,\n          img: student.pic,\n          firstName: student.firstName,\n          lastName: student.lastName,\n          email: student.email,\n          company: student.company,\n          skill: student.skill,\n          grades: student.grades,\n          averageGrade: averageGrade,\n          tags: student.tags,\n          addTag: addTag\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"J7MnEuR1ytWunvEzgSo+XqF7wk4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dominicldimarco/hatchways_interview_11-2021/src/App.js"],"names":["React","useState","useEffect","UserDataCard","FilterContent","styles","App","studentData","setStudentData","filterContent","setFilterContent","nameFilter","setNameFilter","tagFilter","setTagFilter","fetchUrl","tagFilterFunction","str","newTagFilter","newContentFilter","map","student","tagged","tags","tag","includes","push","nameFilterFunction","newNameFilter","contentFilter","fullName","firstName","lastName","toLowerCase","addTag","index","tagForStudentData","url","response","fetch","json","newStudentData","students","addTags","contentContainer","findAverage","array","sum","i","length","parseInt","average","averageGrade","grades","pic","email","company","skill","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAAE,kDAAF,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,iBAAiB,GAAGC,GAAG,IAAI;AAC/B,QAAIA,GAAJ,EAAS;AACP,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,gBAAgB,GAAG,EAAvB;AAEAZ,MAAAA,WAAW,CAACa,GAAZ,CAAgBC,OAAO,IAAI;AACzB,YAAIC,MAAM,GAAG,KAAb;AACAD,QAAAA,OAAO,CAACE,IAAR,CAAaH,GAAb,CAAiBI,GAAG,IAAI;AACtB,cAAIA,GAAG,CAACC,QAAJ,CAAaR,GAAb,CAAJ,EAAuB;AACrBK,YAAAA,MAAM,GAAG,IAAT;AACD;AACF,SAJD;;AAMA,YAAIA,MAAJ,EAAY;AACVJ,UAAAA,YAAY,CAACQ,IAAb,CAAkBL,OAAlB;AACD;AACF,OAXD;AAaAZ,MAAAA,aAAa,CAACW,GAAd,CAAkBC,OAAO,IAAI;AAC3B,YAAIC,MAAM,GAAG,KAAb;AAEAD,QAAAA,OAAO,CAACE,IAAR,CAAaH,GAAb,CAAiBI,GAAG,IAAI;AACtB,cAAIA,GAAG,CAACC,QAAJ,CAAaR,GAAb,CAAJ,EAAuB;AACrBK,YAAAA,MAAM,GAAG,IAAT;AACD;AACF,SAJD;;AAMA,YAAIA,MAAJ,EAAY;AACVH,UAAAA,gBAAgB,CAACO,IAAjB,CAAsBL,OAAtB;AACD;AACF,OAZD;AAcAX,MAAAA,gBAAgB,CAACS,gBAAD,CAAhB;AACAL,MAAAA,YAAY,CAACI,YAAD,CAAZ;AACD,KAjCD,MAiCO;AACLR,MAAAA,gBAAgB,CAACC,UAAD,CAAhB;AACAG,MAAAA,YAAY,CAACP,WAAD,CAAZ;AACD;AACF,GAtCD;;AAwCA,QAAMoB,kBAAkB,GAAGV,GAAG,IAAI;AAChC,QAAIW,aAAa,GAAG,EAApB;AACA,QAAIC,aAAa,GAAG,EAApB;AAEAtB,IAAAA,WAAW,CAACa,GAAZ,CAAgBC,OAAO,IAAI;AACzB,YAAMS,QAAQ,GAAI,GAAET,OAAO,CAACU,SAAU,IAAGV,OAAO,CAACW,QAAS,EAAzC,CAA2CC,WAA3C,EAAjB;;AACA,UAAIH,QAAQ,CAACL,QAAT,CAAkBR,GAAlB,CAAJ,EAA4B;AAC1BW,QAAAA,aAAa,CAACF,IAAd,CAAmBL,OAAnB;AACD;AACF,KALD;AAOAR,IAAAA,SAAS,CAACO,GAAV,CAAcC,OAAO,IAAI;AACvB,YAAMS,QAAQ,GAAI,GAAET,OAAO,CAACU,SAAU,IAAGV,OAAO,CAACW,QAAS,EAAzC,CAA2CC,WAA3C,EAAjB;;AACA,UAAIH,QAAQ,CAACL,QAAT,CAAkBR,GAAlB,CAAJ,EAA4B;AAC1BY,QAAAA,aAAa,CAACH,IAAd,CAAmBL,OAAnB;AACD;AACF,KALD;AAOAX,IAAAA,gBAAgB,CAACmB,aAAD,CAAhB;AACAjB,IAAAA,aAAa,CAACgB,aAAD,CAAb;AACD,GApBD;;AAsBA,QAAMM,MAAM,GAAG,CAACjB,GAAD,EAAMkB,KAAN,KAAgB;AAC7B,UAAMC,iBAAiB,GAAG,CAAC,GAAG7B,WAAJ,CAA1B;AACA6B,IAAAA,iBAAiB,CAACD,KAAD,CAAjB,CAAyBZ,IAAzB,CAA8BG,IAA9B,CAAmCT,GAAnC;AACAT,IAAAA,cAAc,CAAC4B,iBAAD,CAAd;AACD,GAJD;;AAMA,iBAAerB,QAAf,CAAwBsB,GAAxB,EAA6B;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,QAAIC,cAAc,GAAG,EAArB;AAEAD,IAAAA,IAAI,CAACE,QAAL,CAActB,GAAd,CAAkBC,OAAO,IAAI;AAC3B,UAAIsB,OAAO,GAAGtB,OAAd;AACAsB,MAAAA,OAAO,CAACpB,IAAR,GAAe,EAAf;AACAkB,MAAAA,cAAc,CAACf,IAAf,CAAoBiB,OAApB;AACD,KAJD;AAMAnC,IAAAA,cAAc,CAACiC,cAAD,CAAd;AACA/B,IAAAA,gBAAgB,CAAC+B,cAAD,CAAhB;AACA7B,IAAAA,aAAa,CAAC6B,cAAD,CAAb;AACA3B,IAAAA,YAAY,CAAC2B,cAAD,CAAZ;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEpC,MAAM,CAACC,GAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAED,MAAM,CAACuC,gBAAvB;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,cAAc,EAAEjB,kBAA/B;AAAmD,QAAA,IAAI,EAAG;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,cAAc,EAAEX,iBAA/B;AAAkD,QAAA,IAAI,EAAG;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGP,aAAa,CAACW,GAAd,CAAkB,CAACC,OAAD,EAAUc,KAAV,KAAoB;AACrC,iBAASU,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,cAAIC,GAAG,GAAG,CAAV;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCD,YAAAA,GAAG,IAAIG,QAAQ,CAACJ,KAAK,CAACE,CAAD,CAAN,CAAf;AACD;;AAED,cAAIG,OAAO,GAAGJ,GAAG,GAAGD,KAAK,CAACG,MAA1B;AACA,iBAAOE,OAAP;AACD;;AAED,cAAMC,YAAY,GAAGP,WAAW,CAACxB,OAAO,CAACgC,MAAT,CAAhC;AAEA,4BACE,QAAC,YAAD;AAEE,UAAA,KAAK,EAAElB,KAFT;AAGE,UAAA,GAAG,EAAEd,OAAO,CAACiC,GAHf;AAIE,UAAA,SAAS,EAAEjC,OAAO,CAACU,SAJrB;AAKE,UAAA,QAAQ,EAAEV,OAAO,CAACW,QALpB;AAME,UAAA,KAAK,EAAEX,OAAO,CAACkC,KANjB;AAOE,UAAA,OAAO,EAAElC,OAAO,CAACmC,OAPnB;AAQE,UAAA,KAAK,EAAEnC,OAAO,CAACoC,KARjB;AASE,UAAA,MAAM,EAAEpC,OAAO,CAACgC,MATlB;AAUE,UAAA,YAAY,EAAED,YAVhB;AAWE,UAAA,IAAI,EAAE/B,OAAO,CAACE,IAXhB;AAYE,UAAA,MAAM,EAAEW;AAZV,WACOC,KAAK,CAACuB,QAAN,EADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OA9BA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GAvIQpD,G;;KAAAA,G;AAyIT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UserDataCard from \"./components/studentCard/studentCard\";\nimport FilterContent from \"./components/filterContent/filterContent\";\nimport styles from \"./App.css\";\n\nfunction App() {\n\n  const [studentData, setStudentData] = useState([]);\n  const [filterContent, setFilterContent] = useState([]);\n  const [nameFilter, setNameFilter] = useState([]);\n  const [tagFilter, setTagFilter] = useState([]);\n\n  useEffect(() => {\n    fetchUrl(`https://www.hatchways.io/api/assessment/students`);\n  }, []);\n\n  const tagFilterFunction = str => {\n    if (str) {\n      let newTagFilter = [];\n      let newContentFilter = [];\n\n      studentData.map(student => {\n        let tagged = false;\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          newTagFilter.push(student);\n        }\n      });\n\n      filterContent.map(student => {\n        let tagged = false;\n\n        student.tags.map(tag => {\n          if (tag.includes(str)) {\n            tagged = true;\n          }\n        });\n\n        if (tagged) {\n          newContentFilter.push(student);\n        }\n      });\n\n      setFilterContent(newContentFilter);\n      setTagFilter(newTagFilter);\n    } else {\n      setFilterContent(nameFilter);\n      setTagFilter(studentData);\n    }\n  };\n\n  const nameFilterFunction = str => {\n    let newNameFilter = [];\n    let contentFilter = [];\n\n    studentData.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n      if (fullName.includes(str)) {\n        newNameFilter.push(student);\n      }\n    });\n\n    tagFilter.map(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n      if (fullName.includes(str)) {\n        contentFilter.push(student);\n      }\n    });\n\n    setFilterContent(contentFilter);\n    setNameFilter(newNameFilter);\n  };\n\n  const addTag = (str, index) => {\n    const tagForStudentData = [...studentData];\n    tagForStudentData[index].tags.push(str);\n    setStudentData(tagForStudentData);\n  };\n\n  async function fetchUrl(url) {\n    const response = await fetch(url);\n    const json = await response.json();\n    let newStudentData = [];\n\n    json.students.map(student => {\n      let addTags = student;\n      addTags.tags = [];\n      newStudentData.push(addTags);\n    });\n\n    setStudentData(newStudentData);\n    setFilterContent(newStudentData);\n    setNameFilter(newStudentData);\n    setTagFilter(newStudentData);\n  }\n  \n  return (\n    <div className={styles.App}>\n      <div className={styles.contentContainer}>\n        <FilterContent filterFunction={nameFilterFunction} type={`name`} />\n        <FilterContent filterFunction={tagFilterFunction} type={`tag`} />\n        {filterContent.map((student, index) => {\n          function findAverage(array) {\n            let sum = 0;\n            \n            for (let i = 0; i < array.length; i++) {\n              sum += parseInt(array[i]);\n            }\n            \n            let average = sum / array.length;\n            return average;\n          }\n          \n          const averageGrade = findAverage(student.grades);\n          \n          return (\n            <UserDataCard\n              key={index.toString()}\n              index={index}\n              img={student.pic}\n              firstName={student.firstName}\n              lastName={student.lastName}\n              email={student.email}\n              company={student.company}\n              skill={student.skill}\n              grades={student.grades}\n              averageGrade={averageGrade}\n              tags={student.tags}\n              addTag={addTag}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}